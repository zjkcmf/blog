---
title: 并发编程原则
layout: post
categories: [多线程]
guid: urn:uuid:32cb3f86-6a21-46cb-aded-7c4f0bafde8f
tags:
  - 
---

### 可变状态是至关重要的。
#### 所有的并发问题都可以归结为如何协调对并发状态的访问。可变状态越少，越容易确保线程安全。
--------------------------
### 尽量将成员声明成final类型，除非他们是可变的。
--------------------------
### 不可变对象一定是线程安全的。
--------------------------
### 封装有助于管理复杂性。
#### 将同步机制封装在对象中，更易于遵循同步策略。
--------------------------
### 用锁来保护每个可变变量。
--------------------------
### 当保护同一个不变性条件中的所有变量时，要使用同一个锁。
--------------------------
### 在执行复合操作期间，要持有锁。
--------------------------
### 如果从多个线程中访问同一个可变变量时没有同步机制，那么程序会出现问题。
--------------------------
### 不要故做聪明地推断出不需要使用同步。
--------------------------
### 在设计过程中考虑线程安全，或者在文档中明确地指出他不是线程安全的。
--------------------------
### 将同步策略文档化。 
